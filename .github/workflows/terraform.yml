name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: select terraform action
        options:
        - apply
        - destroy
        required: true
  push:
    branches: [ "main" ]

jobs:
  staging:
    runs-on: ubuntu-latest
    terraform:
      name: 'Terraform'
        env:
        # AWS secrets
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY }}

    
      environment: staging

      steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        
    
      - name: Terraform plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        
      
      - name: Terraform apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        
    
      - name: Terraform destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: '.'
          tf_actions_comment: true

  deploy:
    meeds: staging
    runs-on: ubuntu-latest
    terraform:
      name: 'Terraform'
        env:
        # AWS secrets
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_KEY }}

    
      environment: production

      steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        
    
      - name: Terraform plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        
      
      - name: Terraform apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: '.'
          tf_actions_comment: true
        
    
      - name: Terraform destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.3
          tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
          tf_actions_working_dir: '.'
          tf_actions_comment: true      
